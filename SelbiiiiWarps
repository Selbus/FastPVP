###################################################################
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.plugin.Plugin;
 
import java.io.File;
import java.io.IOException;
 
/**
 * This class was created on 1/12/2017 in the project Bukkit Tutorials by DeveloperB.
 */
public class ConfigManager {
 
    private ConfigManager() {
    }
 
    private static ConfigManager instance = new ConfigManager();
 
    public static ConfigManager getInstance() {
        return instance;
    }
 
    private File file;
    private FileConfiguration config;
 
    public void setup(Plugin plugin) {
        if (!plugin.getDataFolder().exists()) {
            plugin.getDataFolder().mkdir();
        }
 
        file = new File(plugin.getDataFolder(), "warps.yml");
 
        if (!file.exists()) {
            try {
                file.createNewFile();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
 
        config = YamlConfiguration.loadConfiguration(file);
 
    }
 
    public void set(String path, Object value) {
        config.set(path, value);
    }
 
    public Object get(String path) {
        return config.get(path);
    }
 
    public boolean contains(String path) {
        return config.contains(path);
    }
 
    public void save() {
        try {
            config.save(file);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
 
}
###################################################################################3
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.block.Sign;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.block.SignChangeEvent;
import org.bukkit.event.player.PlayerInteractEvent;
 
/**
 * This class was created on 1/20/2017 in the project Bukkit Tutorials by DeveloperB.
 */
public class SignListener implements Listener {
 
    public SignListener(Warps plugin) {
        Bukkit.getPluginManager().registerEvents(this, plugin);
    }
 
    @EventHandler
    public void onSignChange(SignChangeEvent e) {
        if (e.getLine(0).equalsIgnoreCase("[Warp]")) {
            if (ConfigManager.getInstance().get("warps."+e.getLine(1).toLowerCase()) == null) {
                e.getPlayer().sendMessage(ChatColor.RED+"Ten warp nie istnieje, stworz mowa tabliczke");
                return;
            }
 
            e.getPlayer().sendMessage(ChatColor.GREEN+"Poprawnie utworzono warp "+ChatColor.DARK_GREEN+e.getLine(1)+ChatColor.GREEN+"!");
            e.setLine(0, ChatColor.DARK_RED+ChatColor.BOLD.toString()+"[Warp]");
            e.setLine(1, ChatColor.RED+e.getLine(1).toUpperCase());
        }
    }
 
    @EventHandler
    public void onInteract(PlayerInteractEvent e) {
        if (e.getAction() == Action.RIGHT_CLICK_BLOCK) {
            if (e.getClickedBlock().getState() instanceof Sign) {
                Sign sign = (Sign) e.getClickedBlock().getState();
 
                if (sign.getLine(0).equalsIgnoreCase(ChatColor.DARK_RED+ChatColor.BOLD.toString()+"[Warp]")) {
                    e.getPlayer().teleport(Warps.getLocation(ChatColor.stripColor(sign.getLine(1)).toLowerCase()));
                    e.getPlayer().sendMessage("§7» Zostales przeteleportowany na warp : "+ChatColor.DARK_GREEN+ChatColor.stripColor(sign.getLine(1)).toLowerCase()+ChatColor.GREEN+"!");
                }
 
            }
        }
    }
 
}
#######################################################################################################
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.World;
import org.bukkit.command.Command;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;
import org.bukkit.plugin.java.JavaPlugin;
 
/**
 * This class was created on 12/21/2016 in the project Bukkit Tutorials by DeveloperB.
 */
public class Warps extends JavaPlugin {
 
    @Override
    public void onEnable() {
        ConfigManager.getInstance().setup(this);
        new SignListener(this);
    }
 
    @Override
    public boolean onCommand(CommandSender sender, Command cmd, String label, String[] args) {
        if (!(sender instanceof Player)) {
            sender.sendMessage("§7» Tylko gracz moze tego uzywac");
            return true;
        }
 
        Player player = (Player) sender;
 
        if (args.length == 0) {
            player.sendMessage("§7» Uzupelnij nazwe warpu ");
        } else if (args.length == 1) {
            String arg = args[0].toLowerCase();
            
            if(!(sender.hasPermission("setwarp.core"))){
            	sender.sendMessage("§cNie posiadasz permisji §7(setwarp.core)");
            	return true;
            }
            	
 
            if (label.equalsIgnoreCase("setwarp")) {
                ConfigManager.getInstance().set("warps."+arg+".world", player.getWorld().getName());
                ConfigManager.getInstance().set("warps."+arg+".x", player.getLocation().getX());
                ConfigManager.getInstance().set("warps."+arg+".y", player.getLocation().getY());
                ConfigManager.getInstance().set("warps."+arg+".z", player.getLocation().getZ());
                ConfigManager.getInstance().set("warps."+arg+".yaw", player.getLocation().getYaw());
                ConfigManager.getInstance().set("warps."+arg+".pitch", player.getLocation().getPitch());
                ConfigManager.getInstance().save();
                ConfigManager.getInstance().setup(this);
                player.sendMessage("§7»Poprawnie utworzono warp: "+ChatColor.DARK_GREEN+arg+ChatColor.GREEN+"!");
            } else if (label.equalsIgnoreCase("warp")) {
                if (!ConfigManager.getInstance().contains("warps."+arg)) {
                    player.sendMessage("§7» Taki warp nie istnieje");
                    return true;
                }
 
                player.teleport(getLocation("arg"));
 
                player.sendMessage(ChatColor.GREEN+"You successfully teleported to the warp: "+ChatColor.DARK_GREEN+arg+ChatColor.GREEN+"!");
            }
 
            /**
             * warps:
             *      args[0]:
             *             world: world
             *             x: 1
             *             y: 1
             *             z: 1
             *             yaw: 1
             *             pitch: 1
             */
 
        } else {
            player.sendMessage(ChatColor.RED+"Too many arguments.");
        }
 
        return true;
    }
 
    public static Location getLocation(String warp) {
        World world = Bukkit.getWorld((String) ConfigManager.getInstance().get("warps."+warp+".world"));
        double x = (double) ConfigManager.getInstance().get("warps."+warp+".x");
        double y = (double) ConfigManager.getInstance().get("warps."+warp+".y");
        double z = (double) ConfigManager.getInstance().get("warps."+warp+".z");
        double yaw = (double) ConfigManager.getInstance().get("warps."+warp+".yaw");
        double pitch = (double) ConfigManager.getInstance().get("warps."+warp+".pitch");
        return new Location(world, x, y, z, (float) yaw, (float) pitch);
    }
 
}
#############################################################################################
name: SelbiiiiWarps
main: ms.SignWarps.Warps
version: 1.0
commands:
        setwarp:
               description: Warp.
               usage: /<command>
        warp:
            description: Warp.
            usage: /<command>
            
permissions:
    setwarp.core:
       description: Ustawia waroy
       default: op
